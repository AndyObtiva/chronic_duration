= Chronic Duration

A simple Ruby natural language parser for elapsed time. (For example, 4 hours and 30 minutes, 6 minutes 4 seconds, 3 days, etc.) Returns all results in seconds. Will return an integer unless you get tricky and need a float. (4 minutes and 13.47 seconds, for example.) 

The reverse can also be accomplished with the output method.  So pass in seconds and you will get values like 4 mins 31.51 secs.

== Installation

    $ sudo gem sources -a http://gems.github.com
    $ sudo gem install hpoydar-chronic_duration

== Usage

    >> require 'chronic_duration'
    => true
    >> ChronicDuration.parse('4 minutes and 30 seconds')
    => 270
    >> ChronicDuration.output(270)
    => 4 mins 30 secs
    
Nil is returned if the string can't be parsed

Examples of parse-able strings:

* '12.4 secs'
* '1:20' 
* '1:20.51'
* '4:01:01'
* '3 mins 4 sec'
* '2 hrs 20 min'
* '2h20min'
* '6 mos 1 day'
* '47 yrs 6 mos and 4d'

    
== TODO

* Benchmark and optimize
* Context specific matching (E.g., for '4m30s', assume 'm' is minutes)
* Smartly parse vacation-like durations (E.g., '4 days and 3 nights')
* Allow alternative formatting for output (E.g., 3m51s, 3:51, or 3 mins 51 sec)